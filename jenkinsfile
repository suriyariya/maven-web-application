node('walmartnode'){
slackNotifications('STARTED')
try{
  echo "The Job Name is: ${env.JOB_NAME}"
  echo "The Node Number is: ${env.NODE_NAME}"
  echo "The Build Number is: ${env.BUILD_NUMBER}"    
  def mavenHome = tool name: 'maven3.8.6'
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
  stage('CheckOutCode'){
  git branch: 'development', credentialsId: '670794d0-70f5-4ec1-b873-6f447367b4df', url: 'https://github.com/suriyariya/maven-web-application.git'
  }
  
  stage('Build'){
  sh "${mavenHome}/bin/mvn package"
  }
  
  stage('ExecuteSonarQubeReport'){
  sh "${mavenHome}/bin/mvn clean sonar:sonar"
  }
  
  stage('UploadArtifactsIntoNexus'){
  sh "${mavenHome}/bin/mvn clean deploy"
  }
  stage('DeployAppIntoTomcatServer'){
  sshagent(['39fd2981-680a-4f12-978d-20d6967d119e']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.30.187:/opt/apache-tomcat-9.0.68/webapps/"
  }
  }
  }//try closing
  catch(e){
  currentBuild.result= "SUCCESS"
  throw e
  }//catch closing
  finally{
  slackNotifications(currentBuild.result)
  }
} //node closing
  //Code Snippet for sending slack notifications.

def slackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'
  //buildStatus = buildStatus ? "SUCCESS":"FAILURE"

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "#devops-test")
}
